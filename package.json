{
  "name": "legal-retro-gaming-service",
  "version": "1.0.0",
  "description": "Browser-based legal retro gaming service with multiplayer support, cloud saves, and social features",
  "main": "backend/server.js",
  "scripts": {
    "start": "node backend/server.js",
    "dev": "nodemon backend/server.js",
    "frontend": "cd frontend && npm start",
    "backend": "cd backend && npm run dev",
    "build": "cd frontend && npm run build",
    "build:backend": "echo 'Backend build completed - no build step required for Node.js'",
    "test": "jest --passWithNoTests",
    "test:backend": "jest backend/ --passWithNoTests",
    "test:frontend": "cd frontend && npm test",
    "test:integration": "jest tests/integration/ --passWithNoTests",
    "test:e2e": "cd frontend && npm run test:e2e",
    "test:coverage": "jest --coverage --passWithNoTests",
    "test:watch": "jest --watch --passWithNoTests",
    "lint": "eslint backend/ --ext .js,.ts",
    "lint:fix": "eslint backend/ --ext .js,.ts --fix",
    "lint:frontend": "cd frontend && npm run lint",
    "format": "prettier --write backend/**/*.{js,ts,json}",
    "format:check": "prettier --check backend/**/*.{js,ts,json}",
    "docker:build": "docker-compose build",
    "docker:up": "docker-compose up -d",
    "docker:down": "docker-compose down",
    "docker:logs": "docker-compose logs -f",
    "docker:clean": "docker system prune -a -f",
    "docker:rebuild": "npm run docker:down && npm run docker:clean && npm run docker:build && npm run docker:up",
    "setup": "./scripts/setup.sh",
    "deploy": "docker-compose -f docker-compose.prod.yml up -d",
    "deploy:staging": "docker-compose -f docker-compose.staging.yml up -d",
    "health": "curl -f http://localhost:3001/health || echo 'Health check failed'",
    "logs": "docker-compose logs -f",
    "clean": "docker system prune -a",
    "backup": "./scripts/backup.sh",
    "restore": "./scripts/restore.sh",
    "db:init": "node scripts/init-database.js",
    "db:migrate": "node scripts/migrate.js",
    "db:seed": "node scripts/seed-database.js",
    "db:reset": "node scripts/reset-database.js",
    "db:backup": "./scripts/backup-database.sh",
    "db:restore": "./scripts/restore-database.sh",
    "security:audit": "npm audit --audit-level moderate",
    "security:fix": "npm audit fix",
    "deps:check": "npx depcheck",
    "deps:update": "npx npm-check-updates -u",
    "performance:test": "npx artillery run tests/performance/load-test.yml",
    "lighthouse": "npx lhci autorun",
    "analyze:bundle": "cd frontend && npm run build && npx webpack-bundle-analyzer frontend/build/static/js/*.js",
    "precommit": "npm run lint && npm run test && npm run format:check",
    "postinstall": "cd frontend && npm install",
    "watch": "concurrently \"npm run backend\" \"npm run frontend\"",
    "watch:backend": "nodemon backend/server.js",
    "monitor": "pm2 start ecosystem.config.js",
    "stop": "pm2 stop ecosystem.config.js",
    "restart": "pm2 restart ecosystem.config.js",
    "status": "pm2 status"
  },
  "keywords": [
    "retro-gaming",
    "browser-gaming",
    "emulation",
    "legal-roms",
    "batocera",
    "retroarch",
    "gaming-service",
    "multiplayer",
    "cloud-saves",
    "socket.io",
    "react",
    "nodejs",
    "postgresql",
    "redis",
    "docker"
  ],
  "author": {
    "name": "Your Name",
    "email": "your.email@example.com",
    "url": "https://github.com/yourusername"
  },
  "license": "MIT",
  "homepage": "https://github.com/yourusername/legal-retro-gaming-service#readme",
  "repository": {
    "type": "git",
    "url": "https://github.com/yourusername/legal-retro-gaming-service.git"
  },
  "bugs": {
    "url": "https://github.com/yourusername/legal-retro-gaming-service/issues"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  },
  "dependencies": {
    "express": "^4.18.2",
    "socket.io": "^4.7.2",
    "redis": "^4.6.7",
    "pg": "^8.11.3",
    "bcrypt": "^5.1.1",
    "jsonwebtoken": "^9.0.2",
    "cors": "^2.8.5",
    "helmet": "^7.1.0",
    "express-rate-limit": "^6.10.0",
    "multer": "^1.4.5-lts.1",
    "winston": "^3.11.0",
    "joi": "^17.11.0",
    "dotenv": "^16.3.1",
    "uuid": "^9.0.1",
    "moment": "^2.29.4",
    "compression": "^1.7.4",
    "express-validator": "^7.0.1",
    "express-session": "^1.17.3",
    "morgan": "^1.10.0",
    "nodemailer": "^6.9.7",
    "sharp": "^0.32.6",
    "archiver": "^6.0.1",
    "extract-zip": "^2.0.1"
  },
  "devDependencies": {
    "nodemon": "^3.0.2",
    "jest": "^29.7.0",
    "supertest": "^6.3.3",
    "eslint": "^8.55.0",
    "prettier": "^3.1.1",
    "@types/node": "^20.10.5",
    "@types/express": "^4.17.21",
    "@types/jest": "^29.5.8",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-prettier": "^5.0.1",
    "eslint-plugin-node": "^11.1.0",
    "eslint-plugin-security": "^1.7.1",
    "husky": "^8.0.3",
    "lint-staged": "^15.2.0",
    "concurrently": "^8.2.2",
    "cross-env": "^7.0.3",
    "artillery": "^2.0.0",
    "@lhci/cli": "^0.12.0",
    "pm2": "^5.3.0",
    "webpack-bundle-analyzer": "^4.10.1",
    "npm-check-updates": "^16.14.12",
    "depcheck": "^1.4.7"
  },
  "jest": {
    "testEnvironment": "node",
    "setupFilesAfterEnv": ["<rootDir>/tests/setup.js"],
    "testMatch": [
      "**/tests/**/*.test.js",
      "**/backend/**/*.test.js"
    ],
    "collectCoverageFrom": [
      "backend/**/*.js",
      "!backend/node_modules/**",
      "!backend/coverage/**",
      "!**/tests/**"
    ],
    "coverageThreshold": {
      "global": {
        "branches": 70,
        "functions": 70,
        "lines": 70,
        "statements": 70
      }
    }
  },
  "eslintConfig": {
    "env": {
      "node": true,
      "es2021": true,
      "jest": true
    },
    "extends": [
      "eslint:recommended",
      "plugin:node/recommended",
      "plugin:security/recommended",
      "prettier"
    ],
    "plugins": ["prettier", "security"],
    "parserOptions": {
      "ecmaVersion": 2021,
      "sourceType": "module"
    },
    "rules": {
      "prettier/prettier": "error",
      "no-console": "warn",
      "no-unused-vars": "error",
      "prefer-const": "error",
      "security/detect-object-injection": "off"
    }
  },
  "prettier": {
    "semi": true,
    "trailingComma": "es5",
    "singleQuote": true,
    "printWidth": 80,
    "tabWidth": 2,
    "useTabs": false
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged",
      "pre-push": "npm run test"
    }
  },
  "lint-staged": {
    "*.{js,ts}": [
      "eslint --fix",
      "prettier --write",
      "git add"
    ],
    "*.{json,md}": [
      "prettier --write",
      "git add"
    ]
  },
  "nodemonConfig": {
    "watch": ["backend/"],
    "ext": "js,json",
    "ignore": ["backend/node_modules/", "backend/logs/", "backend/uploads/"],
    "delay": 1000
  }
} 
